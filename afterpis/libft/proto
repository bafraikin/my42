/*   ft_atoi.c                                          :+:      :+:    :+:   */
static	int	ft_is_space(char c)
int			ft_atoi(const char *str)
	while (ft_is_space(*str))
	while (ft_isdigit(*str))
/*   ft_bzero.c                                         :+:      :+:    :+:   */
void	ft_bzero(void *s, size_t n)
/*   ft_isalnum.c                                       :+:      :+:    :+:   */
int	ft_isalnum(int c)
/*   ft_isalpha.c                                       :+:      :+:    :+:   */
int	ft_isalpha(int c)
/*   ft_isascii.c                                       :+:      :+:    :+:   */
int	ft_isascii(int c)
/*   ft_isdigit.c                                       :+:      :+:    :+:   */
int	ft_isdigit(int c)
/*   ft_isprint.c                                       :+:      :+:    :+:   */
int	ft_isprint(int c)
/*   ft_itoa.c                                          :+:      :+:    :+:   */
static void		ft_fiill(char *str, char c)
static size_t	ft_intlen(int nb)
char			*ft_itoa(int n)
	if ((str = ft_strnew(ft_intlen(n) + 2)) == NULL)
		ft_fiill(str, '0');
		ft_fiill(str, '-');
			ft_fiill(str, n + '0');
/*   ft_memalloc.c                                      :+:      :+:    :+:   */
void	*ft_memalloc(size_t size)
	ft_memset(new, 0, size);
/*   ft_memccpy.c                                       :+:      :+:    :+:   */
void	*ft_memccpy(void *dst, const void *src, int c, size_t n)
/*   ft_memchr.c                                        :+:      :+:    :+:   */
void	*ft_memchr(const void *s, int c, size_t n)
/*   ft_memcmp.c                                        :+:      :+:    :+:   */
int	ft_memcmp(const void *s1, const void *s2, size_t n)
/*   ft_memcpy.c                                        :+:      :+:    :+:   */
void	*ft_memcpy(void *dst, const void *src, size_t n)
/*   ft_memdel.c                                        :+:      :+:    :+:   */
void	ft_memdel(void **ap)
/*   ft_memmove.c                                       :+:      :+:    :+:   */
void	*ft_memmove(void *dst, const void *src, size_t len)
/*   ft_memset.c                                        :+:      :+:    :+:   */
void	*ft_memset(void *b, int c, size_t len)
/*   ft_putchar.c                                       :+:      :+:    :+:   */
void	ft_putchar(char c)
/*   ft_putchar_fd.c                                    :+:      :+:    :+:   */
void	ft_putchar_fd(char c, int fd)
/*   ft_putendl.c                                       :+:      :+:    :+:   */
void	ft_putendl(char const *s)
		ft_putstr(s);
		ft_putchar('\n');
/*   ft_putendl_fd.c                                    :+:      :+:    :+:   */
void	ft_putendl_fd(char const *s, int fd)
		ft_putstr_fd(s, fd);
		ft_putchar_fd('\n', fd);
/*   ft_putnbr.c                                        :+:      :+:    :+:   */
void	ft_putnbr(int nb)
		ft_putchar('0');
		ft_putchar('-');
			ft_putchar(nb + '0');
/*   ft_putnbr_fd.c                                     :+:      :+:    :+:   */
void	ft_putnbr_fd(int n, int fd)
		ft_putchar_fd('0', fd);
		ft_putchar_fd('-', fd);
			ft_putchar_fd(n + '0', fd);
/*   ft_putstr.c                                        :+:      :+:    :+:   */
void	ft_putstr(char const *s)
			ft_putchar(*(s++));
/*   ft_putstr_fd.c                                     :+:      :+:    :+:   */
void	ft_putstr_fd(char const *s, int fd)
			ft_putchar_fd(*(s++), fd);
/*   ft_strcat.c                                        :+:      :+:    :+:   */
char	*ft_strcat(char *s1, const char *s2)
/*   ft_strchr.c                                        :+:      :+:    :+:   */
char	*ft_strchr(const char *s, int c)
/*   ft_strclr.c                                        :+:      :+:    :+:   */
void	ft_strclr(char *s)
		ft_memset(s, 0, ft_strlen(s));
/*   ft_strcmp.c                                        :+:      :+:    :+:   */
int	ft_strcmp(const char *s1, const char *s2)
/*   ft_strcpy.c                                        :+:      :+:    :+:   */
char	*ft_strcpy(char *dst, const char *src)
/*   ft_strdel.c                                        :+:      :+:    :+:   */
void	ft_strdel(char **as)
/*   ft_strdup.c                                        :+:      :+:    :+:   */
char	*ft_strdup(const char *s1)
	dup = (char*)malloc(sizeof(char) * (ft_strlen(s1) + 1));
	return (ft_strcpy(dup, s1));
/*   ft_strequ.c                                        :+:      :+:    :+:   */
int	ft_strequ(char const *s1, char const *s2)
/*   ft_striter.c                                       :+:      :+:    :+:   */
void	ft_striter(char *s, void (*f)(char *))
/*   ft_striteri.c                                      :+:      :+:    :+:   */
void	ft_striteri(char *s, void (*f)(unsigned int, char *))
/*   ft_strjoin.c                                       :+:      :+:    :+:   */
char	*ft_strjoin(char const *s1, char const *s2)
	if (!(new = (char *)malloc(sizeof(char) * (ft_strlen(s1) +
						ft_strlen(s2) + 1))))
	ft_strcpy(new, s1);
	ft_strcpy(new + ft_strlen(s1), s2);
/*   ft_strlcat.c                                       :+:      :+:    :+:   */
size_t	ft_strlcat(char *dst, const char *src, size_t size)
	len_src = ft_strlen(src);
	len_dst = ft_strlen(dst);
		ft_memcpy(dst + len_dst, src, len_src + 1);
		ft_memcpy(dst + len_dst, src, size - 1);
/*   ft_strlen.c                                        :+:      :+:    :+:   */
size_t	ft_strlen(const char *s)
/*   ft_strmap.c                                        :+:      :+:    :+:   */
char	*ft_strmap(char const *s, char (*f)(char))
	if (!(new = (char*)malloc(sizeof(char) * (ft_strlen(s) + 1))))
/*   ft_strmapi.c                                       :+:      :+:    :+:   */
char	*ft_strmapi(char const *s, char (*f)(unsigned int, char))
	if (!(new = (char*)malloc(sizeof(char) * (ft_strlen(s) + 1))))
/*   ft_strncat.c                                       :+:      :+:    :+:   */
char	*ft_strncat(char *s1, const char *s2, size_t n)
/*   ft_strncmp.c                                       :+:      :+:    :+:   */
int	ft_strncmp(const char *s1, const char *s2, size_t n)
/*   ft_strncpy.c                                       :+:      :+:    :+:   */
char	*ft_strncpy(char *dst, const char *src, size_t len)
/*   ft_strnequ.c                                       :+:      :+:    :+:   */
int	ft_strnequ(char const *s1, char const *s2, size_t n)
/*   ft_strnew.c                                        :+:      :+:    :+:   */
char	*ft_strnew(size_t size)
	ft_memset(new, 0, size + 1);
/*   ft_strnstr.c                                       :+:      :+:    :+:   */
char	*ft_strnstr(const char *haystack, const char *needle, size_t len)
/*   ft_strrchr.c                                       :+:      :+:    :+:   */
char	*ft_strrchr(const char *s, int c)
/*   ft_strsplit.c                                      :+:      :+:    :+:   */
static	int			ft_is_charset(char c, char charset)
static	int			ft_count_word(char const *str, char charset)
		if (!ft_is_charset(*str, charset))
			while (!ft_is_charset(*str, charset) && *str != '\0')
static const char	*ft_next_word(char const *str, char charset)
		if (!ft_is_charset(*str, charset))
static int			ft_lenght(char const *str, char charset)
	while (*str && !ft_is_charset(*str, charset))
char				**ft_strsplit(char const *s, char c)
	word_count = ft_count_word(s, c);
	s = ft_next_word(s, c);
		lenght = ft_lenght(ft_next_word(s, c), c);
		s = ft_next_word(s, c);
/*   ft_strstr.c                                        :+:      :+:    :+:   */
char	*ft_strstr(const char *haystack, const char *needle)
/*   ft_strsub.c                                        :+:      :+:    :+:   */
char	*ft_strsub(char const *s, unsigned int start, size_t len)
	if (!(ab = ft_strnew(len)))
	ab = ft_strncpy(ab, s + start, len);
/*   ft_strtrim.c                                       :+:      :+:    :+:   */
static	int		ft_ischarset(char const c)
static	int		ft_count_word(char const *str)
		if (!ft_ischarset(*str))
			while (!ft_ischarset(*str) && *str != '\0')
	count = ft_count_word(str);
	while (ft_ischarset(*str))
		if (!ft_ischarset(str[i]))
			while (!ft_ischarset(str[i]) && str[i] != '\0')
char			*ft_strtrim(char const *s)
	if (!(new = ft_strnew(i)))
	while (ft_ischarset(*s))
/*   ft_tolower.c                                       :+:      :+:    :+:   */
int	ft_tolower(int c)
/*   ft_toupper.c                                       :+:      :+:    :+:   */
int	ft_toupper(int c)
